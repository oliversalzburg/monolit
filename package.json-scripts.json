{
  "comment": "This file is generated by node-scripts-docs.",
  "scripts": [
    {
      "manifestPath": "packages/documentation/package.json",
      "projectName": "@monolit/documentation",
      "scriptName": "docs:build",
      "scriptCode": ".scripts/build.sh",
      "isGlobal": true,
      "description": "Build the MonoLit documentation website."
    },
    {
      "manifestPath": "packages/documentation/package.json",
      "projectName": "@monolit/documentation",
      "scriptName": "docs:prepare",
      "scriptCode": "docker build -t mkdocs-material .",
      "isGlobal": true
    },
    {
      "manifestPath": "package.json",
      "projectName": "root",
      "scriptName": "docs:scripts:build",
      "scriptCode": "nsd --docs-location \"packages/documentation/docs/reference/Repository Scripts/\"",
      "isGlobal": true,
      "description": "Build the `node-scripts-docs` you're reading right now."
    },
    {
      "manifestPath": "package.json",
      "projectName": "root",
      "scriptName": "docs:scripts:check",
      "scriptCode": "nsd --docs-location \"packages/documentation/docs/reference/Repository Scripts/\" --check-only",
      "isGlobal": true,
      "description": "Check if there are any changes to the `node-scripts-docs` documentation."
    },
    {
      "manifestPath": "packages/documentation/package.json",
      "projectName": "@monolit/documentation",
      "scriptName": "docs:serve",
      "scriptCode": ".scripts/serve.sh",
      "isGlobal": true
    },
    {
      "manifestPath": "packages/documentation/package.json",
      "projectName": "@monolit/documentation",
      "scriptName": "docs:wtf",
      "scriptCode": "echo ${PROJECT_CWD} ${PWD} ${INIT_CWD} $(pwd)",
      "isGlobal": true
    },
    {
      "manifestPath": "packages/monolit/package.json",
      "projectName": "monolit",
      "scriptName": "extension:clean",
      "scriptCode": "rm -rf dist",
      "isGlobal": true
    },
    {
      "manifestPath": "packages/monolit/package.json",
      "projectName": "monolit",
      "scriptName": "extension:compile",
      "scriptCode": "webpack --mode development",
      "isGlobal": true
    },
    {
      "manifestPath": "packages/monolit/package.json",
      "projectName": "monolit",
      "scriptName": "extension:package",
      "scriptCode": "run vsce package --yarn",
      "isGlobal": true
    },
    {
      "manifestPath": "packages/monolit/package.json",
      "projectName": "monolit",
      "scriptName": "extension:package:patch",
      "scriptCode": "npm version patch && run vsce package --yarn",
      "isGlobal": true
    },
    {
      "manifestPath": "packages/monolit/package.json",
      "projectName": "monolit",
      "scriptName": "extension:publish",
      "scriptCode": "run vsce publish --yarn",
      "isGlobal": true
    },
    {
      "manifestPath": "packages/monolit/package.json",
      "projectName": "monolit",
      "scriptName": "extension:watch",
      "scriptCode": "webpack --mode development --watch",
      "isGlobal": true,
      "description": "Build the extension in watch mode."
    },
    {
      "manifestPath": "package.json",
      "projectName": "root",
      "scriptName": "lint:eslint",
      "scriptCode": "eslint packages --ext .ts",
      "isGlobal": true,
      "description": "Run ESLint on the TypeScript sources."
    },
    {
      "manifestPath": "package.json",
      "projectName": "root",
      "scriptName": "lint:tsc",
      "scriptCode": "tsc --noEmit",
      "isGlobal": true,
      "description": "Run the TypeScript compiler on the TypeScript sources to check for errors."
    },
    {
      "manifestPath": "package.json",
      "projectName": "root",
      "scriptName": "typecheck:all",
      "scriptCode": "tsc --noEmit --incremental false",
      "isGlobal": true
    },
    {
      "manifestPath": "packages/monolit/package.json",
      "projectName": "monolit",
      "scriptName": "vscode:prepublish",
      "scriptCode": "webpack --mode production",
      "isGlobal": true
    }
  ],
  "version": 1
}
